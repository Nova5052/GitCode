1.del 使用del可以删除变量，会直接将变量从内存中删除，程序后续无法再使用该变量。
2.被 import的模块会在根目录生成 .pyc类型的文件。它是被编译过的二进制文件。加快运行速度。
3.列表就等同于数组，使用[]定义。
4.len(列表)是返回列表长度。列表.Count("abc") 是统计abc在列表中出现的次数。
5.列表.remove("abc") 删除列表中的第一个 abc 
6.列表.sort() 升序或者将降序排列; 列表.reverse() 反转列表，在原列表的基础上直接反转排列。
7.选中一段代码 按Tab键增加缩进;按 Shift+Tab 减少缩进; 按 Ctrl+K 整段注释
8.字典用 {} 定义。使用update可将一个字典B添加到另外一个字典A里面。如果有重复项，会更新掉A字典里的值。

字符串相关
9.定义字符串可以用单引号也可以用双引号(默认)。如果字符串中本身就有双引号，那么字符串就可以用单引号来定义。str='我的外号是"大西瓜"'
10.isspace:判断是否只包含空格或者\r\n\t 之类的空白字符。
11.isdecimal(默认)、isnumeric、isdigit 判断是否为纯数字。只能判断整数不能判断小数。
12.startswith、endwith 判断是否以指定字符(串)开始或者结束
13.index和find都可以查找字符串中指定字符串的索引。若不包含指定字符串，inde会报错，find会返回 -1。
14.replace 替换指定字符串。本身字符串不会变，会生成并返回一个新的字符串。
15.center(居中)、ljust(左对齐)、rjust(右对齐)
16.split() 拆分字符串，不传参数时默认使用 空格分割。join() 将列表字符串拼接。
17.可变类型包括:列表、字典; 不可变类型包括:数字，字符串，元组

函数相关
18.全局变量在函数中不会被改变，若在函数中给他赋值，实际上是创建了一个同名局部变量。即使通过实参传递也不行。若需要修改 使用 global
19.函数实参传递时，传递的是引用。
20.无论传入的参数是可变参数(列表，字典)还是不可变参数(数字，字符串，元组)。在函数中对其进行赋值(一定是=号进行赋值)，都不会改变原有的数据值。
21.接上一条。如果在函数内部使用 列表，字典的 append 之类的内部运算符，则会改变外部数据的值。
22.接20. 对列表进行 +=操作时，实际上类似于执行的 extend操作，所以会改变外部数据的值。对数字，字符串进行 += 运算，则不会改变外部数据的值。
23.函数的默认参数必须放在末尾。具有多个缺省参数时，需要指定给哪个参数传递数据。
24.多值参数:函数处理的参数的个数如果是不确定的，可以使用多值参数。 参数前加*,用来接收元组(*args);参数前加 **,用来接收字典(**kwargs)
25.接上一条 使用 *,**进行参数传入拆包。demo(1,*gl_tuple,**gl_dic) ,不然后续传入的值都会作为元组的数据传入。

面向对象
26.创建对象时，自动调用__init__方法。分配空间，初始化属性的初始值。
27. == 运算符 与 is(身份判断运算符)的区别。==是判断值是否相等，is 判读内存地址是否一样。is更加的深入。判断是否等于 None时，最好用 is
28.定义属性或者方法时在前面加 __ 就成了私有属性。对象内部可以访问私有属性。如果想在外部访问私有方法(属性)，可以使用 _类名__私有方法()或 _类名__私有属性 的方式访问。